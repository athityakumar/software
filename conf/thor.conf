{
    // The below are highly dependent on trim
    "center_of_buoyancy": [0.0017, -0.0026, -0.035],
    "buoyancy_force": 369,  // FUDGED to assume postively buoyant sub
    "gravity_force": 369,

    // only used for partially submerged buoyancy force calculation, non critical
    "sub_height": 0.50,

    // Moments of inertia (kg * m^2) from solidworks.
    // In the model frame.
    "I": [[ 0.7786, 0.0086, 0.1441],
          [ 0.0086, 3.5742,-0.0190],
          [ 0.1441,-0.0190, 3.7847]],
    // Ib and body_rot calculated using auv-body-frame-calc.
    "Ib": [0.771676, 3.57266, 3.79317],
    // A normalized quaternion representing rotation from the body to the model
    // frame.
    "btom_rq": [-0.02381, 0.00270344, 0.99882, 0.0422376],
    // x was tweaked to reflect the limited real backwards thrust of our thrusters.
    "cwhe_axes": [76.5549069159, 76.5549069159, 153.109813832, 38.277453458, 53.5884348412, 45.9329441496],
    "thruster_minimums": [-76.5549069159, -90.9802827426, -181.960565485, -38.277453458, -53.5884348412, -42.3266001929],
    "thruster_maximums": [76.5549069159, 62.1295310892, 124.259062178, 38.277453458, 53.5884348412, 49.5392881062],
    "thrusters": [
        { "name": "fore_port",     "type": "T200", "pos": [0.24, -0.23, -0.10], "heading_pitch": [0, -90] },
        { "name": "port",          "type": "T200", "pos": [-0.25, -0.31, -0.05],"heading_pitch": [0, 0] },
        { "name": "aft_port",      "type": "T200", "pos": [-0.40, -0.23, 0.01], "heading_pitch": [0, -90] },
        { "name": "sway_aft",      "type": "T200", "pos": [-0.50, -0.01, 0.01],"heading_pitch": [90, 0] },
        { "name": "aft_starboard", "type": "T200", "pos": [-0.40, 0.23,  0.01], "heading_pitch": [0, -90] },
        { "name": "starboard",     "type": "T200", "pos": [-0.25, 0.31, -0.05], "heading_pitch": [0, 0] },
        { "name": "fore_starboard","type": "T200", "pos": [0.24,  0.23, -0.10], "heading_pitch": [0, -90] },
        { "name": "sway_fore",     "type": "T200", "pos": [0.48, 0.01, 0.01],  "heading_pitch": [90, 0] }
    ],
    "drag_planes": [
        // horizontal, produces drag when diving and pitching
        {
            "pos": [0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.35
        },
        {
            "pos": [-0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.35
        },
        // fore sway, produces drag when swaying and rolling
        {
            "pos": [0, 0, -0.10],
            "normal": [0, 1, 0],
            "cD": 2.0,
            "area": 0.2
        },
        // aft sway
        {
            "pos": [0, 0, 0.10],
            "normal": [0, 1, 0],
            "cD": 2.0,
            "area": 0.2
        },
        // vertical, produces drag when going forward and yawing
        {
            "pos": [0, -0.25, 0],
            "normal": [1, 0, 0],
            "cD": 2.0,
            "area": 0.10
        },
        {
            "pos": [0, 0.25, 0],
            "normal": [1, 0, 0],
            "cD": 2.0,
            "area": 0.10
        }
    ],
    // uncompensated drag, to simulate drag that is not accounted for by the controller
    // (or that the controller can't efectively account for)
    "uncompensated_drag_planes": [
    ],
    "sensors": {
        "heading": "gx4.heading",
        "pitch": "gx4.pitch",
        "roll": "gx4.roll",
        "depth": "depth.depth",
        "depth_offset": "depth.offset",
        "heading_rate": "gx4.ratez",
        "pitch_rate": "gx4.ratey",
        "roll_rate": "gx4.ratex",
        "velx": "dvl.velocity_x",
        "vely": "dvl.velocity_y",
        "accelx": "gx4.accelx",
        "accely": "gx4.accely",
        "accelz": "gx4.accelz",
        "ratez": "gx4.ratez",
        "quaternion": "gx4"
    },
    "components": {
      "port_forecam": [0.0, 0.0, 0.0],
      "starboard_forecam": [0.0, 0.0, 0.0],
      "downcam": [0.0, 0.0, 0.0],
      "sonar": [0.0, 0.0, 0.0]
    }
}
// vim: set filetype=javascript expandtab :
